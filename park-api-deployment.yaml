apiVersion: apps/v1
kind: Deployment
metadata:
  name: park-api
spec:
  replicas: 4
  selector:
    matchLabels:
      app: park-api
  template:
    metadata:
      labels:
        app: park-api
      annotations:
        prometheus.io/scrape: "true"         # Habilita a raspagem pelo Prometheus
        prometheus.io/path: "/actuator/prometheus" # Caminho do endpoint de métricas (verifique na sua API!)
        prometheus.io/port: "8080"           # Porta do container onde a API expõe métricas
    spec:
      containers:
        - name: park-api
          image: eliasflach/park-api:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://mysql-service:3306/parkdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC"
            - name: SPRING_DATASOURCE_USERNAME
              value: "parkuser"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "parkpass"
          resources:
            limits:
              memory: "1Gi"
              cpu: "800m"
            requests:
              memory: "512Mi"
              cpu: "400m"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 90
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3